#!/usr/bin/python
## Python 3 ##

'''
    CleanUp script for ravAuto. 
    Reads from csv file generated by ravAuto.
    Removes Applications and related Ephemeral Tokens.

    A10 Networks 6/27/2017
'''
import sys
import csv
import getpass
import argparse
import pandas as pd
from ravello_sdk import *

##############################################################################
#### Functions
##

def mkparser():
    parser = argparse.ArgumentParser(description="Deletes Ravello apps and ephemeral tokens. \
                                    Takes csv file, that's generated from ravAuto, as input.")

    parser.add_argument("-c", dest="input_file",default=None,help='name of csv file created by ravAuto')
    parser.add_argument("-l", dest="log_file", default='ravello.log',help='logfile name')

    return parser


## taken from ravAuto functions ##
def get_string_input(prompt: str) -> str:
    while True:
        try:
            my_input = eval(repr(str(input(prompt))))
            break
        except (ValueError, NameError):
            print("    Simple Strings only please!")
    return my_input

def my_print_debug(location: str, mything):
    print(" ")
    print("Checking " + location + " with: " + str(type(mything)), end="")
    print(mything)
#====#

def clean_app(client,appID,lookup):
    if client.get_application(appID) != None:
        client.stop_application(appID)
        client.delete_application(appID)
        print("App ID " + str(appID) + " for app " + lookup[appID] + " DELETED")
    else:
        print("App ID " + str(appID) + " for app " + lookup[appID] + " NOT FOUND")

def clean_ephem(client,ephemID,lookup):
    try:
        if client.get_ephemeral_access_token(ephemID) != None:
            client.delete_ephemeral_access_token(ephemID)
            print("Ephemeral Token ID " + str(ephemID) + "for app "+ lookup[ephemID] + " DELETED")
    except Exception as inst:
        #my_print_debug('client.get_ephemeral_access_token(ephemID)', inst)
        e = sys.exc_info()[0]
        #print(e)
        print("Ephemeral Token ID " + str(ephemID) + "for app "+ lookup[ephemID] + " NOT FOUND")
 
def printList(lst):
	for x in lst:
		print(x)

##########################################################################
########    MAIN 
####

def main():
    parser = mkparser()
    args = parser.parse_args()
    if args.input_file:
        input_file = args.input_file
    else:
        input_file = get_string_input(prompt="Please enter your csv filename: ")
        
    ## Downloads data into lists and dicts
    try:
        with open(input_file, 'rb') as csv_file:
            df = pd.read_csv(csv_file)
            appName_list = df['ApplicationName']
            appID_list = df['applicationID'] 
            ephemID_list = df['ephemTokenID']

            lookup_app = dict(zip(appID_list,appName_list))
            lookup_ephem = dict(zip(ephemID_list,appName_list))
    except:
        print(input_file + " can't be opened for reading.")
        sys.exit(2)

    # Connect to Ravello.
    user = get_string_input(prompt="Please enter your username: ")
    password = getpass.getpass("Please enter your password: ") 
    client = RavelloClient()
    client.login(user,password)
    #client.login('myemail','mypass')

    print()

    # Delete apps
    for appID in appID_list:
	    clean_app(client,appID,lookup_app)

    # Delete ephemeral tokens
    for ephemID in ephemID_list:
	    clean_ephem(client,ephemID,lookup_ephem)

    print()

    client.logout()

if __name__ == '__main__':
    try:
        main()
    except Exception as e:
        sys.stderr.write('Error: {!s}\n'.format(e))

